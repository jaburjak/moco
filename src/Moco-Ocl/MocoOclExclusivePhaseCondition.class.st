"
Represents an OCL invariant condition generated by a transformation of a phase partition using exclusive phase associations.
"
Class {
	#name : #MocoOclExclusivePhaseCondition,
	#superclass : #Object,
	#instVars : [
		'context',
		'name',
		'phaseAssociations'
	],
	#category : #'Moco-Ocl-Model'
}

{ #category : #accessing }
MocoOclExclusivePhaseCondition >> context [
	^ context
]

{ #category : #accessing }
MocoOclExclusivePhaseCondition >> context: anObject [
	context := anObject
]

{ #category : #accessing }
MocoOclExclusivePhaseCondition >> initialize [
	super initialize.
	
	phaseAssociations := OrderedCollection new.
	name := ''.
]

{ #category : #accessing }
MocoOclExclusivePhaseCondition >> name [
	^ name
]

{ #category : #accessing }
MocoOclExclusivePhaseCondition >> name: aString [
	name := aString
]

{ #category : #accessing }
MocoOclExclusivePhaseCondition >> phaseAssociations [
	^ phaseAssociations
]

{ #category : #printing }
MocoOclExclusivePhaseCondition >> printTo: aStream [
	aStream
		nextPutAll: '|--OCL-----------';
		cr;
		nextPutAll: '| context ' , context name , ' inv EX_' , context name , '_' , name, '_Condition:';
		cr;
		nextPutAll: '| ', (' XOR ' join: (phaseAssociations collect: [ :each | 'self.' , (each name) , ' <> OclVoid' ]));
		cr;
		nextPutAll: '|----------------'.
]
