"
Represents an OCL invariant condition generated by a transformation of a phase partition using exclusive phase associations.
"
Class {
	#name : #MocoOclExclusivePhaseCondition,
	#superclass : #MocoOclInvariant,
	#instVars : [
		'phaseAssociations'
	],
	#category : #'Moco-Ocl-Model'
}

{ #category : #accessing }
MocoOclExclusivePhaseCondition >> initialize [
	super initialize.
	
	phaseAssociations := OrderedCollection new
]

{ #category : #accessing }
MocoOclExclusivePhaseCondition >> phaseAssociations [
	^ phaseAssociations
]

{ #category : #printing }
MocoOclExclusivePhaseCondition >> printTo: aStream [
	super printTo: aStream.
	
	aStream
		nextPutAll: '| ', (' XOR ' join: (phaseAssociations collect: [ :each | 'self.' , (each name) , ' <> OclVoid' ]));
		cr;
		nextPutAll: '+----------------'
]
